{"version":3,"sources":["webpack:///webpack/bootstrap ba06dfa3595875af4563","webpack:///external \"lodash\"","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/regenerator/index.js","webpack:///external \"koa-router\"","webpack:///./server/utils/params.js","webpack:///./server/models/index.js","webpack:///external \"mongoose\"","webpack:///./server/service/entity.js","webpack:///./server/controls/books.js","webpack:///./server/models/base-model.js","webpack:///external \"koa-session2\"","webpack:///./constant/web.js","webpack:///external \"jsonwebtoken\"","webpack:///./server/controls/category.js","webpack:///./server/app.js","webpack:///external \"koa\"","webpack:///external \"koa-compress\"","webpack:///external \"koa-cors\"","webpack:///external \"koa-bodyparser\"","webpack:///external \"boom\"","webpack:///external \"nuxt\"","webpack:///./server/service/store.js","webpack:///external \"regenerator-runtime\"","webpack:///external \"ioredis\"","webpack:///./server/service/mongdb.js","webpack:///./server/conf/web.js","webpack:///external \"debug\"","webpack:///./server/router/v1/index.js","webpack:///./server/router/v1/books.js","webpack:///./server/models/category.js","webpack:///./server/models/comment.js","webpack:///./server/models/books.js","webpack:///./server/models/user.js","webpack:///./server/utils/wraper.js","webpack:///external \"child_process\"","webpack:///./server/router/v1/category.js","webpack:///./server/router/v1/draft.js","webpack:///./server/controls/draft.js","webpack:///./server/router/v1/post.js","webpack:///./server/controls/post.js","webpack:///./server/router/v1/user.js","webpack:///./server/controls/user.js","webpack:///external \"axios\"","webpack:///./server/conf/adminType.js","webpack:///./server/conf/index.js","webpack:///./server/router/v1/comment.js","webpack:///./server/controls/comment.js","webpack:///external \"ulid\"","webpack:///external \"zlib\"","webpack:///./nuxt.config.js","webpack:///external \"webpack\"","webpack:///./package.json"],"names":["checkLogin","ctx","status","session","userInfo","userId","body","code","data","msg","queryValidate","query","omit","bodyValidate","request","tokenValidate","hasOwnProperty","category","books","user","comment","fetch","model","sortType","conditions","Promise","resolve","reject","err","doc","fetchPage","skip","limit","parseInt","refFetchPage","find","findInfo","findById","id","refFindById","findByMulId","ids","count","create","createInfo","update","params","updateInfo","updateBase","options","remove","removeInfo","BookControl","sort","res","arr","type","post","catch","i","length","item","_doc","commentid","comments","bookid","categoryid","name","userid","star","userData","bookData","_id","bookDataStar","userDataStar","some","push","headimgurl","nickname","update_time","Date","now","upData","pick","canDeleteFlag","authority","categorys","obj","postCount","list","total","Object","assign","unPostCount","starCount","booksCtrl","cb","exec","findOne","counts","$set","web","nuxt","host","port","secret","exports","module","CategoryControl","categoryControl","app","use","formLimit","jsonLimit","key","maxAge","filter","content_type","test","threshold","flush","require","Z_SYNC_FLUSH","routes","allowedMethods","throw","notImplemented","methodNotAllowed","config","dev","env","NODE_ENV","console","log","builder","build","error","e","process","exit","req","on","render","promise","then","listen","RedisStore","redis","sid","get","JSON","parse","getID","set","stringify","del","DB","db","DB_DEV","DB_TEST","DB_PRO","global","url","setting","useMongoClient","connect","router","prefix","authorize","next","method","path","token","decoded","verify","constant","title","isInteger","reg","RegExp","$regex","bookList","countCategoryBook","bookDetail","isUndefined","updateStar","deleteBook","userBookList","countUserBook","CategorySchema","Schema","String","iconcolor","Number","versionKey","statics","merge","CommentSchema","BookSchema","cover","html","markdown","ObjectId","ref","post_time","Array","populate","select","username","callback","UserSchema","reg_time","login_time","weixin","qq","findByUsrName","userName","updateByOpts","login","wraper","categoryList","draftList","draftData","updateBook","DraftControl","draftCtrl","postList","postData","publisBook","PostControl","postCtrl","appid","cookies","loginState","getUser","starLen","splice","updateUser","getAllUser","updateUserAuth","UserControl","grant_type","requstValue","userInfoData","access_token","openid","getUserData","updateUserData","getUserInfo","superAdmin","createUserData","jwtData","sign","expiresIn","updateData","tableList","userCtrl","admins","openidList","WX_INFO","addComment","replayComment","CommentControl","content","time","toString","commentData","create_time","newDoc","touser","commentDoc","map","index","childcomments","commentCtrl","webpack","webConf","debug","head","meta","charset","hid","link","rel","href","css","src","lang","baseUrl","BASE_URL","middleware","vendor","plugins","DefinePlugin","version","__DEV","extend","isClient","rules","loader","watch","ssr","loading","watchers","aggregateTimeout","ignored","poll"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba06dfa3595875af4563","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/regenerator/index.js\n// module id = 1\n// module chunks = 0","module.exports = require(\"koa-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-router\"\n// module id = 2\n// module chunks = 0","/**\n * Created by Cray on 2017/5/25.\n */\nimport _ from 'lodash'\n\nexport default {\n    /**\n     * 验证是否登录\n     * @returns {*}\n     */\n    checkLogin(ctx) {\n        let status = null;\n        if (ctx.session.userInfo && ctx.session.userInfo.userId) {\n            status = true;\n        } else {\n            status = false;\n            ctx.body = { code: 401, data: null, msg: '未登陆' }\n        }\n        return status\n    },\n    /**\n     * 查询参数验证\n     * @param req\n     * @param res\n     * @returns {*}\n     */\n    queryValidate(ctx) {\n        let query = ctx.query\n        if (typeof(query) !== 'object') {\n            return null\n        }\n        // query = Object.keys(query).length > 0 ? query : null\n\n        return _.omit(query, ['token'])\n    },\n\n    /**\n     * 提交参数验证\n     * @param req\n     * @param res\n     * @returns {*}\n     */\n    bodyValidate(ctx) {\n        let body = ctx.request.body\n        if (typeof(body) !== 'object') {\n            return null\n        }\n        return _.omit(body, ['token'])\n    },\n\n    /**\n     * token 验证\n     * @param req\n     * @param res\n     * @returns {*}\n     */\n    tokenValidate(ctx) {\n        let body = ctx.body\n        let query = ctx.query\n        if (typeof(body) !== 'object' || typeof(query) !== 'object') {\n            return null\n        }\n\n        if (query.hasOwnProperty('token')) {\n            return query\n        }\n\n        return body\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./server/utils/params.js","import category from  './category'\nimport comment from './comment';\nimport books from './books';\nimport user from './user';\n\nexport default {\n    category,\n    books,\n    user,\n    comment\n}\n\n\n// WEBPACK FOOTER //\n// ./server/models/index.js","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 5\n// module chunks = 0","import _ from 'lodash'\nimport { wraper } from '../utils/wraper'\n\nexport default {\n\n    /**\n     * 抓取数据\n     * @param {*} model\n     */\n    fetch(model, sortType = 'update_time', conditions = {}) {\n        return new Promise((resolve, reject) => {\n            model.fetch((err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            }, sortType, conditions)\n        })\n    },\n    /**\n     * 分页获取数据\n     */\n    fetchPage(model, skip, limit, sortType, conditions) {\n        return new Promise((resolve, reject) => {\n            model.fetchPage(parseInt(skip), parseInt(limit), (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            }, sortType, conditions)\n        })\n    },\n\n    /**\n     * 分页获取数据 关联查询\n     */\n    refFetchPage(model, skip, limit, sortType, conditions) {\n        return new Promise((resolve, reject) => {\n            model.refFetchPage(parseInt(skip), parseInt(limit), (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            }, sortType, conditions)\n        })\n    },\n\n    /**\n     * 查找多个\n     * @param {*} model\n     * @param {*} conditions\n     */\n    find(model, conditions) {\n        return new Promise((resolve, reject) => {\n            model.findInfo(conditions, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n    },\n\n    /**\n     * 查找一个\n     * @param {*} model\n     * @param {*} id\n     */\n    findById(model, id) {\n        return new Promise((resolve, reject) => {\n            model.findById(id, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n    },\n    /**\n     * 查找一个 关联查询\n     * @param {*} model\n     * @param {*} id\n     */\n    refFindById(model, id) {\n        return new Promise((resolve, reject) => {\n            model.refFindById(id, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n\n    },\n\n    /**\n     * 查询多个id数据\n     * @param {*} model\n     * @param {*} ids\n     */\n    findByMulId(model, ids) {\n        return new Promise((resolve, reject) => {\n            model.findByMulId(ids, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n    },\n\n    /**\n     * 数量查询\n     * @param {*} model\n     * @param {*} conditions\n     */\n    count(model, conditions) {\n        return new Promise((resolve, reject) => {\n            model.count(conditions, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n    },\n\n    /**\n     * 创建文档\n     * @param {*} model\n     * @param {*} doc\n     */\n    create(model, doc) {\n        //封装参数\n        doc = wraper(model, doc)\n        return new Promise((resolve, reject) => {\n            model.createInfo(doc, (err, data) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(data)\n                }\n            })\n        })\n    },\n\n    /**\n     * 更新\n     * @param {*} model\n     * @param {*} id\n     * @param {*} params\n     */\n    update(model, id, params) {\n        return new Promise((resolve, reject) => {\n            model.updateInfo(id, params, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n    },\n    /**\n     * 更新\n     * @param {*} model\n     * @param {*} id\n     * @param {*} params\n     */\n    updateBase(model, conditions = {}, update = {}, options = {}) {\n        return new Promise((resolve, reject) => {\n            model.update(conditions, update, options, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n    },\n\n\n    /**\n     * 删除by id\n     * @param {*} model\n     * @param {*} id\n     */\n    remove(model, id) {\n        return new Promise((resolve, reject) => {\n            model.removeInfo(id, (err, doc) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(doc)\n                }\n            })\n        })\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./server/service/entity.js","import Model from '../models/index'\nimport Entity from '../service/entity'\nimport { exec } from 'child_process';\nimport mongoose from 'mongoose';\nimport _ from 'lodash'\n\nexport default class BookControl {\n    constructor() {}\n\n    /**\n     * 获得所有发布的内容\n     */\n    async bookList(conditions, skip, limit) {\n        let sort = 'post_time',\n            res = null,\n            arr = [];\n\n        // 发现\n        if (conditions.type) {\n            sort = 'update_time'\n            delete conditions.type\n        }\n\n        let doc = await Entity.refFetchPage(Model.books, parseInt(skip), parseInt(limit), sort, {\n            post: 1,\n            ...conditions\n        }).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        });\n        for (let i = 0; i < doc.length; i++) {\n            let item = doc[i]._doc,\n                comment = '';\n            if (item.commentid) comment = await Entity.findById(Model.comment, item.commentid).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'query error'\n                }\n            });\n            if (comment.comments) item['commentLength'] = comment.comments.length;\n        }\n\n        // 解析数据\n        if (!res) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 获得图书详情\n     */\n    async bookDetail(bookid) {\n        let res = null\n        let doc = await Entity.refFindById(Model.books, bookid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        });\n        if (doc) {\n            let item = doc._doc,\n                comment = '',\n                category = '';\n            if (item.commentid) comment = await Entity.findById(Model.comment, item.commentid).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'query error'\n                }\n            });\n            if (item.categoryid) category = await Entity.findById(Model.category, item.categoryid).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'query error'\n                }\n            });\n            if (comment.comments) item['comment'] = comment.comments;\n            if (category.name) item['category'] = category.name;\n        }\n        // 解析数据\n        if (!res) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 添加star\n     */\n    async updateStar(userid, bookid, star) {\n        //参数验证\n        star = star === 1 ? 1 : 0\n\n        let res = null\n        let userData = await Entity.findById(Model.user, userid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'user query error'\n            }\n        })\n        let bookData = await Entity.refFindById(Model.books, bookid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'book query error'\n            }\n        })\n\n        // 解析数据\n        if (!res) {\n            if (bookData && bookData.userid._id == userid) {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: '不能收藏自己的文章'\n                }\n            } else {\n                let bookDataStar;\n                let userDataStar = userData.star;\n                if(bookData){\n                    bookDataStar = bookData.star;\n                }\n\n                if (star == 1) {\n                    if (!_.some(bookDataStar, { userid: userid })) {\n                        bookDataStar.push({\n                            userid: userid,\n                            headimgurl: userData.headimgurl,\n                            nickname: userData.nickname\n                        })\n                    }\n                    if (!_.some(userDataStar, { bookid: bookid })) {\n                        userDataStar.push(bookData)\n                    }\n                } else {\n                    if (bookDataStar) {\n                        _.remove(bookDataStar, (item) => {\n                            return item.userid == userid;\n                        });\n                        _.remove(userDataStar, (item) => {\n                            return item._id == bookid;\n                        });\n                    }else {\n                        _.remove(userDataStar, (item) => {\n                            return item._id == bookid;\n                        });\n                    }\n                }\n\n                //成功返回数据\n                res = {\n                    code: 200,\n                    data: null,\n                    msg: 'update success'\n                }\n                //开始更新如果出错设置返回出错数据\n                await Entity.update(Model.books, bookid, {\n                    star: bookDataStar,\n                    update_time: Date.now()\n                }).catch(e => {\n                    res = {\n                        code: 500,\n                        data: null,\n                        msg: 'update fail'\n                    }\n                })\n                await Entity.update(Model.user, userid, {\n                    star: userDataStar\n                }).catch(e => {\n                    res = {\n                        code: 500,\n                        data: null,\n                        msg: 'update fail'\n                    }\n                })\n            }\n        }\n\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n\n    }\n\n    /**\n     * 更新图书\n     * title\n     * html\n     * markdown\n     */\n    async updateBook(bookid, params) {\n        let res = null,\n            doc = null,\n            upData = _.pick(params, ['title', 'html', 'markdown', 'categoryid', 'userid', 'cover']);\n        if (!upData.categoryid) upData.categoryid = '000000000000000000000000';\n        upData.update_time = Date.now();\n\n        if (bookid) {\n            doc = await Entity.update(Model.books, bookid, upData).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'query error'\n                }\n            })\n            res = res || {\n                code: 200,\n                data: doc,\n                msg: '更新成功'\n            }\n        } else {\n            upData['post'] = 0;\n            doc = await Entity.create(Model.books, upData).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'query error'\n                }\n            })\n            res = res || {\n                code: 200,\n                data: doc,\n                msg: '添加成功'\n            }\n        }\n\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 删除book\n     */\n    async deleteBook(bookid, userInfo) {\n\n        let res = null,\n            canDeleteFlag = false;\n\n\n        if (userInfo && userInfo.authority > 0) { // 权限 0 普通用户 1 管理员 2 超级管理员\n            canDeleteFlag = true\n        }\n        if (!canDeleteFlag) {\n            let bookData = await Entity.findById(Model.books, bookid).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'book query error'\n                }\n            })\n\n            if (bookData.userid == userInfo.userId) { // 作者 可删除\n                canDeleteFlag = true\n            } else {\n                res = {\n                    code: 403,\n                    data: {},\n                    msg: '没有权限删除'\n                }\n            }\n\n        }\n\n        if (canDeleteFlag) {\n            await Entity.remove(Model.books, bookid).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'delete error'\n                }\n            })\n        }\n\n        if (!res) {\n            res = {\n                code: 200,\n                data: {},\n                msg: 'del success'\n            }\n        }\n\n        return new Promise((resolve) => {\n            resolve(res);\n        })\n    }\n\n    /**\n     * 根据分组得到book的数量\n     * title\n     * cateGoryId\n     */\n    async countCategoryBook(conditions) {\n        let res = null\n        conditions.post = 1\n\n        let categorys = await Entity.fetch(Model.category).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'categorys query error'\n            }\n        })\n\n        if (!res) {\n            for (let obj of categorys) {\n                conditions.categoryid = obj._id;\n                let doc = await Entity.count(Model.books, conditions).catch(e => {\n                    res = {\n                        code: 500,\n                        data: null,\n                        msg: 'books query error'\n                    }\n                })\n                obj._doc['count'] = doc\n            }\n        }\n        // 解析数据\n        if (!res) {\n            res = {\n                code: 200,\n                data: categorys,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 个人主页已发布或者草稿\n     * */\n    async userBookList(skip, limit, conditions = {}) {\n        let res = null,\n            doc = [];\n        skip = parseInt(skip)\n        limit = parseInt(limit)\n        let postCount = await Entity.count(Model.books, conditions).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'books query error'\n            }\n        })\n\n        if (postCount) {\n            if (postCount <= skip) {\n                skip = skip - limit;\n            }\n            doc = await Entity.refFetchPage(Model.books, skip, limit, 'update_time', conditions).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'query error'\n                }\n            });\n            if (!res && doc.length > 0) {\n                for (let i = 0; i < doc.length; i++) {\n                    let item = doc[i]._doc,\n                        category = {};\n                    if (item.categoryid) {\n                        category = await Entity.findById(Model.category, item.categoryid).catch(e => {\n                            res = {\n                                code: 500,\n                                data: null,\n                                msg: 'query error'\n                            }\n                        }) || {};\n                        if (category.name) {\n                            item['category'] = category.name;\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!res) {\n            res = {\n                code: 200,\n                data: { list: doc, total: postCount },\n                msg: '',\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 个人主页已发布，草稿，收藏总数\n     * */\n    async countUserBook(conditions = {}) {\n        let res = null;\n        let postCount = await Entity.count(Model.books, Object.assign(conditions, { post: 1 })).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'books query error'\n            }\n        })\n\n        let unPostCount = await Entity.count(Model.books, Object.assign(conditions, { post: 0 })).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'books query error'\n            }\n        })\n\n        let userData = await Entity.findById(Model.user, conditions.userid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n\n        if (!res) {\n            res = {\n                code: 200,\n                data: {\n                    postCount,\n                    unPostCount,\n                    starCount: userData.star.length\n                },\n                msg: '',\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n\n}\n\nexport const booksCtrl = new BookControl()\n\n\n// WEBPACK FOOTER //\n// ./server/controls/books.js","/**\n * Created by Cray on 2017/3/23.\n */\n\nexport default {\n    fetch: function(cb, sortType = 'update_time', conditions = {}) {\n        return this\n            .find(conditions)\n            .sort({ [sortType] : 'desc' })\n            .exec(cb);\n    },\n    fetchPage: function(skip, limit, cb, sortType = 'update_time', conditions = {}) {\n        return this\n            .find(conditions)\n            .skip(skip)\n            .limit(limit)\n            .sort({ [sortType] : 'desc' })\n            .exec(cb);\n    },\n    findById: function(id, cb){\n        return this\n            .findOne({_id: id})\n            .exec(cb);\n    },\n    counts: function (conditions, cb) {\n        return this\n            .count(conditions)\n            .exec(cb);\n    },\n    findByMulId(ids, cb) {\n        return this\n        .find({ _id: {'$in': ids} })\n        .exec(cb);\n    },\n    findInfo: function(conditions, cb){\n        return this\n            .find(conditions)\n            .exec(cb);\n    },\n    createInfo: function(doc, cb){\n        return this\n            .create(doc, cb);\n    },\n    updateInfo: function(id, doc, cb){\n        let conditions = {_id: id};\n        let options = {};\n        let update = {$set: doc};\n        return this\n            .update(conditions, update, options, cb);\n    },\n    removeInfo: function(id, cb){\n        let conditions = {_id: id};\n        return this\n            .remove(conditions, cb);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./server/models/base-model.js","module.exports = require(\"koa-session2\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-session2\"\n// module id = 9\n// module chunks = 0","const web = {\n    nuxt: {\n        host: \"127.0.0.1\",\n        port: 9018\n    },\n    secret: 'hefan',\n}\n\nexports = module.exports = web\n\n\n\n// WEBPACK FOOTER //\n// ./constant/web.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 11\n// module chunks = 0","import _ from 'lodash'\nimport Model from '../models'\nimport Entity from '../service/entity'\n\nexport default class CategoryControl{\n\n    /**\n     * 获得分类列表\n     */\n    async categoryList() {\n        let res = null;\n        let doc = await Entity.fetch(Model.category).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n\n        // 解析数据\n        if (doc) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 获得类别\n     * @param {*} categoryid \n     */\n    async categoryDetail(categoryid) {\n        let res = null\n        let doc = await Entity.findById(Model.category, categoryid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n        // 解析数据\n        if (doc) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 文章总数加1\n     * @param {*} categoryid \n     */\n    async updateTotal(categoryid) {\n        let res = null\n        let doc = await Entity.findById(Model.category, categoryid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n        // 解析数据\n        if (doc) {\n            res = {\n                code: 200,\n                data: {},\n                msg: ''\n            }\n\n            await Entity.update(Model.category, categoryid, {\n                total : doc.total + 1\n            }).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'update fail'\n                }\n            })\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n}\n\nexport const categoryControl = new CategoryControl()\n\n\n\n// WEBPACK FOOTER //\n// ./server/controls/category.js","import Koa from 'koa'\nimport Session from 'koa-session2'\nimport Router from 'koa-router'\nimport Compress from 'koa-compress'\nimport cors from 'koa-cors'\nimport BodyParser from 'koa-bodyparser'\nimport Boom from 'boom'\nimport {Nuxt, Builder} from 'nuxt'\nimport Store from \"./service/store.js\"\nimport './service/mongdb'\nimport webConf from '../constant/web'\nimport apiV1Router from './router/v1'\n\n\nconst app = new Koa()\nconst host = webConf.nuxt.host\nconst port = webConf.nuxt.port\n\napp.use(BodyParser({\n    formLimit: '50mb',\n    jsonLimit: '50mb',\n}))\napp.use(cors())\napp.use(Session({\n    key: \"hefan_freshbook\",\n    maxAge: 24 * 60 * 60 * 1000\n    // store: new Store()  //redis\n}))\n\napp.use(Compress({\n    filter: function (content_type) {\n        return /js|css/i.test(content_type)\n    },\n    threshold: 2048,\n    flush: require('zlib').Z_SYNC_FLUSH\n}))\n\napp.use(apiV1Router.routes());\napp.use(apiV1Router.allowedMethods({\n    throw: true,\n    notImplemented: () => new Boom.notImplemented(),\n    methodNotAllowed: () => new Boom.methodNotAllowed()\n}));\n\n// Import and Set Nuxt.js options\nlet config = require('../nuxt.config.js')\nconfig.dev = !(process.env.NODE_ENV === 'production')\n\n//set nuxt env\nconfig.env.NODE_ENV = process.env.NODE_ENV\nconsole.log('Nuxt env: ' + config.env.NODE_ENV)\n// Instantiate nuxt.js\nconst nuxt = new Nuxt(config)\n\n// Build in development\nif (config.dev) {\n    const builder = new Builder(nuxt)\n    builder.build().catch(e => {\n        console.error(e) // eslint-disable-line no-console\n        process.exit(1)\n    })\n}\n\napp.use(ctx => {\n    ctx.status = 200 // koa defaults to 404 when it sees that status is unset\n    ctx.req.session = ctx.session;\n    return new Promise((resolve, reject) => {\n        ctx.res.on('close', resolve)\n        ctx.res.on('finish', resolve)\n        nuxt.render(ctx.req, ctx.res, promise => {\n            // nuxt.render passes a rejected promise into callback on error.\n            promise.then(resolve).catch(reject)\n        })\n    })\n})\n\napp.listen(port)\nconsole.log('Server listening on ' + host + ':' + port) // eslint-disable-line no-console\nconsole.log('Server node env' + \" : \"+ process.env.NODE_ENV)\n\n\n\n// WEBPACK FOOTER //\n// ./server/app.js","module.exports = require(\"koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"koa-compress\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-compress\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"koa-cors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-cors\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"koa-bodyparser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-bodyparser\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"boom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"boom\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"nuxt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nuxt\"\n// module id = 19\n// module chunks = 0","import Redis from \"ioredis\"\nimport { Store } from \"koa-session2\"\n\nclass RedisStore extends Store {\n    constructor() {\n        super();\n        this.redis = new Redis();\n    }\n\n    async get(sid, ctx) {\n        let data = await this.redis.get(`SESSION:${sid}`);\n        return JSON.parse(data);\n    }\n\n    async set(session, { sid =  this.getID(24), maxAge = 1000000 } = {}, ctx) {\n        try {\n            // Use redis set EX to automatically drop expired sessions\n            await this.redis.set(`SESSION:${sid}`, JSON.stringify(session), 'EX', maxAge / 1000);\n        } catch (e) {}\n        return sid;\n    }\n\n    async destroy(sid, ctx) {\n        return await this.redis.del(`SESSION:${sid}`);\n    }\n}\n\nexport default RedisStore;\n\n\n// WEBPACK FOOTER //\n// ./server/service/store.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"ioredis\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ioredis\"\n// module id = 22\n// module chunks = 0","import config from '../conf/web';\nimport debug from 'debug';\nimport mongoose  from 'mongoose'\n\nconst DB = process.env.NODE_ENV == \"development\" ? config.db.DB_DEV :\n        (process.env.NODE_ENV == 'testing' ? config.db.DB_TEST : config.db.DB_PRO);\n\nmongoose.set('debug', process.env.NODE_ENV == \"development\" || process.env.NODE_ENV == 'testing');\n\n\nmongoose.Promise = global.Promise;\n\nconst {url, options} = DB;\nconst setting = Object.assign({}, {useMongoClient: true}, options);\n// console.log(url)\n\n\nmongoose.connect(url, setting).then(\n    () => {\n        debug.log('Mongoose connection open to: ' + DB.url);\n    },\n    err => {\n        debug.log('Mongoose connection error: ' + err);\n    }\n);\n\n\n// WEBPACK FOOTER //\n// ./server/service/mongdb.js","\nexport default {\n    db: {\n        //mongodb 配置\n        DB_DEV: {\n            url: 'mongodb://admin:hefantv.123@47.93.89.11:28017/freshbook-dev',\n            options: {\n            }\n        },\n        DB_TEST: {\n            url: 'mongodb://admin:hefantv.123@47.93.89.11:28017/freshbook-test',\n            options: {\n            }\n        },\n        DB_PRO: {\n            url: 'mongodb://admin:hefantv.123@47.93.89.11:28017/freshbook',\n            options: {\n            }\n        }\n    }\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./server/conf/web.js","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 25\n// module chunks = 0","import jwt from 'jsonwebtoken';\n\nimport Params from '../../utils/params'\n\nimport Router from 'koa-router'\nimport book from './books'\nimport category from './category'\nimport draft from './draft'\nimport post from './post'\nimport user from './user'\nimport comment from './comment'\n\nconst router = new Router({prefix: '/v1'})\n\n/**\n * token登录验证\n */\n// router.use(authorize)\n\nrouter.use(book.routes(), book.allowedMethods())\nrouter.use(category.routes(), category.allowedMethods())\nrouter.use(draft.routes(), draft.allowedMethods())\nrouter.use(post.routes(), post.allowedMethods())\nrouter.use(user.routes(), user.allowedMethods())\nrouter.use(comment.routes(), comment.allowedMethods())\n\nfunction authorize (ctx, next) {\n  // console.log( ctx )\n  if (ctx.method === 'OPTIONS') {\n    ctx.body = {}\n    return\n  }\n\n  let params = null\n  if (Params.tokenValidate(ctx)) {\n    params = Params.tokenValidate(req, res)\n  }else {\n    ctx.body = {\n      data: {},\n      code: '208',\n      msg: 'token不存在'\n    }\n    return\n  }\n\n  if (ctx.path === '/login') {\n  }else {\n    if (!params.token) {\n      ctx.body = {\n        data: {},\n        code: '209',\n        msg: 'token不存在'\n      }\n      return\n    }\n\n    let token = params.token\n    let decoded = null\n\n    try {\n      decoded = jwt.verify(token, constant.secret)\n    } catch(err) {\n      ctx.body = {\n        data: {},\n        code: '210',\n        msg: 'token 已过期'\n      }\n      return\n    }\n  }\n  next()\n}\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/router/v1/index.js","import Router from \"koa-router\"\n// import koaBody from 'koa-body'\nimport _ from 'lodash'\nimport Params from '../../utils/params'\nimport { booksCtrl } from '../../controls/books'\nimport { categoryControl } from '../../controls/category'\n\nconst router = new Router()\n\n/**\n * 获得book列表\n */\nrouter.get(\"/bookList\", async(ctx, next) => {\n    let { title, categoryid, type, limit, skip } = Params.queryValidate(ctx)\n    let conditions = {};\n    limit = parseInt(limit);\n    skip = parseInt(skip);\n    if (_.isInteger(limit) && _.isInteger(skip)) {\n        if (title) {\n            const reg = new RegExp(title, 'i') //不区分大小写\n            conditions['title'] = { $regex: reg }\n        }\n        if (categoryid) {\n            conditions['categoryid'] = categoryid;\n        }\n        if (type) {\n            conditions['type'] = type;\n        }\n        let bookData = await booksCtrl.bookList(conditions, skip, limit);\n        ctx.body = bookData\n    } else {\n        ctx.body = {\n            code: 400,\n            data: {},\n            msg: \"查询参数错误\"\n        }\n    }\n\n})\n\n\n/**\n * 根据分组获得book的count\n */\nrouter.get(\"/countCategoryBook\", async(ctx, next) => {\n    let { title } = Params.queryValidate(ctx)\n    let conditions = {}\n    if (title) {\n        const reg = new RegExp(title, 'i') //不区分大小写\n        conditions.title = { $regex: reg }\n    }\n\n    let categorys = await booksCtrl.countCategoryBook(conditions)\n    ctx.body = categorys\n\n})\n\n\n/**\n * 获得文章详情\n */\nrouter.get('/bookDetail', async(ctx, next) => {\n    let { bookid } = Params.queryValidate(ctx)\n    let bookData = await booksCtrl.bookDetail(bookid)\n    ctx.body = bookData\n})\n\n\n/**\n * star or unstar\n */\nrouter.get('/updateStar', async(ctx, next) => {\n    let { bookid, star } = Params.queryValidate(ctx)\n    if (_.isUndefined(bookid) || _.isUndefined(star)) {\n        ctx.body = {\n            code: 400,\n            msg: \"查询参数错误\"\n        }\n    } else {\n        let userid = ctx.session.userInfo.userId || 1111\n        let bookData = await booksCtrl.updateStar(userid, bookid, parseInt(star))\n        ctx.body = bookData\n    }\n\n})\n\n/**\n * 删除文章0\n *\n *\n */\nrouter.post('/deleteBook', async(ctx, next) => {\n    let { params } = Params.bodyValidate(ctx);\n    let { bookid } = params;\n    let user = ctx.session.userInfo\n    let data = {\n        code: 401,\n        data: {},\n        msg: 'bookid is empty'\n    }\n    if (!_.isUndefined(bookid)) {\n        data = await booksCtrl.deleteBook(bookid, user)\n    }\n    ctx.body = data\n})\n\n/**\n * 个人主页已发布或者草稿\n * */\nrouter.get(\"/userBookList\", async(ctx, next) => {\n    let { limit, skip, conditions } = Params.queryValidate(ctx);\n\n    limit = parseInt(limit);\n    skip = parseInt(skip);\n    conditions = JSON.parse(conditions);\n    if (_.isInteger(limit) && _.isInteger(skip)) {\n        let bookData = await booksCtrl.userBookList(skip, limit, conditions);\n        ctx.body = bookData\n    } else {\n        ctx.body = {\n            code: 400,\n            data: {},\n            msg: \"查询参数错误\"\n        }\n    }\n\n})\n/**\n * 个人主页已发布，草稿，收藏总数\n * */\nrouter.get(\"/countUserBook\", async(ctx, next) => {\n    let { conditions } = Params.queryValidate(ctx);\n    conditions = JSON.parse(conditions);\n    if (conditions) {\n        let bookData = await booksCtrl.countUserBook(conditions);\n        ctx.body = bookData\n    } else {\n        ctx.body = {\n            code: 400,\n            data: {},\n            msg: \"查询参数错误\"\n        }\n    }\n\n})\n\nexport default router;\n\n\n// WEBPACK FOOTER //\n// ./server/router/v1/books.js","/**\n * Created by Cray on 2017/7/3.\n */\nimport baseModel from './base-model';\nimport _ from 'lodash';\nimport mongoose from 'mongoose';\n\n\nconst CategorySchema = new mongoose.Schema({\n    name: String,\n    title: String,\n    update_time: String,\n    iconcolor:String,\n    total: Number\n}, { versionKey: false });\n\n\nCategorySchema.statics = _.merge(baseModel, {\n});\n\nexport default mongoose.model('category', CategorySchema, 'categorys');\n\n\n// WEBPACK FOOTER //\n// ./server/models/category.js","/**\n * Created by Cray on 2017/7/3.\n */\nimport baseModel from './base-model';\nimport _ from 'lodash';\nimport mongoose from 'mongoose';\n\nconst CommentSchema = new mongoose.Schema({\n    comments: [],\n    update_time: String\n}, { versionKey: false });\n\n\nCommentSchema.statics = _.merge(baseModel, {\n});\n\nexport default mongoose.model('comment', CommentSchema, 'comments');\n\n\n// WEBPACK FOOTER //\n// ./server/models/comment.js","/**\n * Created by Cray on 2017/7/3.\n */\nimport baseModel from './base-model';\nimport _ from 'lodash';\nimport mongoose from 'mongoose';\n\nconst BookSchema = new mongoose.Schema({\n    title: String,\n    cover: String,\n    html: String,\n    markdown: String,\n    // categoryid: String,\n    categoryid: {type: mongoose.Schema.ObjectId, ref: 'category'},\n    commentid: String,\n    post: Number,\n    update_time: String,\n    post_time: String,\n    star: Array,\n    userid: {type: mongoose.Schema.ObjectId, ref: 'user'}\n}, {versionKey: false});\n\nBookSchema.statics = _.merge(baseModel, {\n    fetchPage: function (skip, limit, cb, sortType = 'post_time', conditions = {}) {\n        return this\n            .find(conditions)\n            .skip(skip)\n            .limit(limit)\n            .sort({[sortType]: 'desc'})\n            .exec(cb);\n    },\n    refFetchPage: async function (skip, limit, cb, sortType = 'post_time', conditions = {}) {\n        return this\n            .find(conditions)\n            .populate([{\n                path: 'userid',\n                select: {_id: 1, username: 1, nickname: 1, headimgurl: 1, authority: 1} //user的字段\n            },{\n                path: 'categoryid',\n            }])\n            .skip(skip)\n            .limit(limit)\n            .sort({[sortType]: 'desc'})\n            .exec(cb);\n    },\n    refFindById: function (id, callback) {\n        return this.findOne({_id: id})\n            .populate([{\n                path: 'userid',\n                select: {_id: 1, username: 1, nickname: 1, headimgurl: 1, authority: 1}\n            },{\n                path: 'categoryid',\n            }])\n            .exec(callback);\n    }\n});\n\nexport default mongoose.model('book', BookSchema, 'books');\n\n\n// WEBPACK FOOTER //\n// ./server/models/books.js","import baseModel from './base-model';\nimport _ from 'lodash';\nimport mongoose from 'mongoose';\n\nconst UserSchema = new mongoose.Schema({\n    username: String,\n    nickname: String,\n    headimgurl: String,\n    authority: Number,\n    reg_time: String,\n    update_time: String,\n    login_time: String,\n    star: Array,\n    weixin: Object,\n    qq: Object\n}, { versionKey: false });\n\nUserSchema.statics = _.merge(baseModel, {\n    findByUsrName(userName, cb) {\n        return this.findOne({ userName: userName }).exec(cb);\n    },\n    updateByOpts: function(conditions, doc, cb) {\n        let options = {};\n        let update = { $set: doc };\n        return this\n            .update(conditions, update, options, cb);\n    },\n    login(user, cb) {\n        return this\n            .findOne(user).exec(cb);\n    }\n});\n\nexport default mongoose.model('user', UserSchema, 'users');\n\n\n// WEBPACK FOOTER //\n// ./server/models/user.js","/**\n * Created by Cray on 2017/8/17.\n */\nimport _ from 'lodash'\nimport Model from '../models';\n\nexport const wraper = (model, params) => {\n    if (model === Model.books) {\n        params = _.pick(params, ['title', 'cover', 'html', 'userid', 'markdown', 'categoryid', 'commentid'\n        , 'post', 'update_time', 'post_time', 'star']);\n        return Object.assign({}, {\n            title: \"\",\n            cover: \"\",\n            html: \"\",\n            userid: \"\",\n            markdown: \"\",\n            categoryid: \"\",\n            commentid: \"\",\n            post: \"\",\n            update_time: Date.now(),\n            post_time: \"\",\n            star: []\n        }, params)\n    }\n\n    if (model === Model.category) {\n        params = _.pick(params, ['name', 'title', 'update_time', 'total','iconcolor']);\n        return Object.assign({}, {\n            name: \"\",\n            title: \"\",\n            iconcolor:\"\",\n            update_time: Date.now(),\n            total: 0\n        }, params)\n    }\n\n    if (model === Model.comment) {\n        params = _.pick(params, [ 'comments', 'update_time']);\n        return Object.assign({}, {\n            comments: [],\n            update_time: Date.now()\n        }, params)\n    }\n\n    if (model === Model.user) {\n        params = _.pick(params, ['username', 'nickname', 'headimgurl', 'authority'\n    ,'reg_time', 'login_time', 'update_time', 'star', 'weixin', 'qq']);\n        return Object.assign({}, {\n            username: \"\",\n            nickname: \"\",\n            headimgurl: \"\",\n            authority: 0,\n            reg_time: \"\",\n            login_time: \"\",\n            update_time: \"\",\n            star: [],\n            weixin: {},\n            qq: {},\n        }, params)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./server/utils/wraper.js","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 33\n// module chunks = 0","import Router from  \"koa-router\"\nimport _ from 'lodash'\nimport {categoryControl} from '../../controls/category'\n\nconst router = new Router()\n\n/**\n * 获得分类列表\n */\nrouter.get(\"/categoryList\", async (ctx, next) => {\n    let data = await categoryControl.categoryList()\n    ctx.body = data\n})\n\nexport default router;\n\n\n// WEBPACK FOOTER //\n// ./server/router/v1/category.js","import Router from  \"koa-router\"\nimport Params from '../../utils/params'\nimport {draftCtrl} from '../../controls/draft'\n\nconst router = new Router()\n\n/**\n * 获得草稿列表\n */\nrouter.get(\"/draftList\", async (ctx, next) => {\n    let userid = ctx.session.userid || 1111\n    let draftData = await draftCtrl.draftList(userid)\n\n    ctx.body = draftData\n})\n\n/**\n * 获得草稿\n */\nrouter.get('/getDraft', async (ctx, next) => {\n    let {bookid} = Params.queryValidate(ctx)\n    let draftData = await draftCtrl.bookDetail(bookid)\n\n    ctx.body = draftData\n})\n\n/**\n * 更新草稿\n */\nrouter.post('/updateDraft', async (ctx, next) => {\n\n    if(!Params.checkLogin(ctx)){\n        return\n    }\n\n    let params = Params.bodyValidate(ctx);\n    let {bookid} = params;\n    if(!params.userid){\n        let user = ctx.session.userInfo || {}\n        params.userid = user.userId || ''\n    }\n    let draftData = await draftCtrl.updateBook(bookid, params)\n    ctx.body = draftData\n})\n\nexport default router;\n\n\n// WEBPACK FOOTER //\n// ./server/router/v1/draft.js","\nimport _ from 'lodash'\nimport Model from '../models'\nimport Entity from '../service/entity'\nimport BookControl from './books'\n\nexport default class DraftControl extends BookControl {\n    constructor(){\n        super()\n    }\n    /**\n     * 获得草稿列表\n     */\n    async draftList(userid) {\n        let conditions = {\n            userid: userid,\n            post: 0\n        }\n\n        let res = null\n        let doc = await Entity.fetch(Model.books, 'update_time', conditions).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n        // 解析数据\n        if (!res) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n}\n\nexport const draftCtrl = new DraftControl()\n\n\n// WEBPACK FOOTER //\n// ./server/controls/draft.js","import Router from  \"koa-router\"\nimport Params from '../../utils/params'\nimport {postCtrl} from '../../controls/post'\n\nconst router = new Router()\n\n/**\n * 获得发布文章列表\n */\nrouter.get(\"/postList\", async (ctx, next) => {\n    let userid = ctx.session.userid || 1111\n    let postData = await postCtrl.postList(userid)\n\n    ctx.body = postData\n})\n\n/**\n * 获得发布文章\n */\nrouter.get('/getPost', async (ctx, next) => {\n    let userid = ctx.session.userid || 1111\n    let postData = await postCtrl.bookDetail(userid)\n\n    ctx.body = postData\n})\n\n/**\n * 更新发布文章\n */\nrouter.post('/updatePost', async (ctx, next) => {\n    if(!Params.checkLogin(ctx)){\n        return\n    }\n    let params = Params.bodyValidate(ctx)\n    let { bookid } = params;\n    let postData = await postCtrl.updateBook(bookid, params)\n    ctx.body = postData\n})\n\n/**\n * 发布文章\n */\nrouter.post('/publisBook', async (ctx, next) => {\n\n    if(!Params.checkLogin(ctx)){\n        return\n    }\n    let params = Params.bodyValidate(ctx)\n    let { bookid } = params\n    if(!params.userid){\n        let user = ctx.session.userInfo || {}\n        params.userid = user.userId || ''\n    }\n    let postData = await postCtrl.publisBook(bookid,params)\n\n    ctx.body = postData\n})\n\n\nexport default router;\n\n\n// WEBPACK FOOTER //\n// ./server/router/v1/post.js","import _ from 'lodash'\nimport Model from '../models'\nimport Entity from '../service/entity'\nimport BookControl from './books'\n\n\nexport default class PostControl extends BookControl {\n    constructor() {\n        super()\n    }\n\n    /**\n     * 获得发布文章列表\n     */\n    async postList(userid) {\n        let conditions = {\n            userid: userid,\n            post: 1\n        }\n        let res = null\n        let doc = await Entity.fetch(Model.books, 'update_time', conditions).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n        // 解析数据\n        if (!res) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     *\n     * @param {*} bookid\n     */\n    async publisBook(bookid, params) {\n        let upData = _.pick(params, ['title', 'html', 'markdown', 'categoryid', 'userid', 'cover']);\n        Object.assign(upData, {\n            post: '1',\n            post_time: Date.now(),\n        });\n        let res = null\n        let doc = await Entity.update(Model.books, bookid, upData).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n\n        res = res || {\n                code: 200,\n                data: doc,\n                msg: 'ok'\n            }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n}\n\nexport const postCtrl = new PostControl()\n\n\n// WEBPACK FOOTER //\n// ./server/controls/post.js","import Router from \"koa-router\"\nimport _ from 'lodash'\nimport Params from '../../utils/params'\nimport { userCtrl } from '../../controls/user'\nimport { WX_INFO } from '../../conf/index'\nconst router = new Router()\n\nrouter.get(\"/login\", async(ctx, next) => {\n\n    let { code } = Params.queryValidate(ctx);\n\n    let data = await userCtrl.login(code, WX_INFO.appid, WX_INFO.secret)\n    if (data) {\n        ctx.session.userInfo = data;\n        ctx.req.session = ctx.session.userInfo;\n        ctx.request.session = ctx.session.userInfo;\n        ctx.cookies.set('hefan_freshbook', ctx.cookies.get('hefan_freshbook'), {\n            maxAge: 24 * 60 * 60 * 1000\n        });\n        ctx.body = {\n            code: 200,\n            data: data,\n            msg: '登录成功！'\n        }\n    } else {\n        ctx.body = {\n            code: 200,\n            data: [],\n            msg: '登录失败，请重新扫码！'\n        }\n    }\n\n\n\n})\nrouter.get(\"/logout\", async(ctx, next) => {\n    if (ctx.session && ctx.session.userInfo) {\n        ctx.session.userInfo = null;\n        ctx.req.session = ctx.session.userInfo;\n        ctx.request.session = ctx.session.userInfo;\n    }\n    ctx.body = {\n        code: 200,\n        data: [],\n        msg: '退出成功！'\n    }\n})\nrouter.get(\"/checkLogin\", async(ctx, next) => {\n    let loginState = false;\n    if (ctx.session && ctx.session.userInfo) {\n        loginState = true;\n    }\n    ctx.body = {\n        code: 200,\n        data: loginState,\n        msg: '登陆状态查询成功！'\n    }\n})\nrouter.get(\"/getUser\", async(ctx, next) => {\n    let { userid, limit, skip } = Params.queryValidate(ctx);\n    limit = parseInt(limit);\n    skip = parseInt(skip);\n    if (userid) {\n        let userData = await userCtrl.getUser(userid)\n        userData.data._doc.starLen = userData.data.star.length;\n        if (_.isInteger(limit) && _.isInteger(skip) && limit > 0 && userData.data.star.length > skip) {\n            skip = skip >= 0 ? skip : 0;\n\n            userData.data.star = userData.data.star.splice(skip, limit)\n\n        }\n        ctx.body = userData;\n\n    } else {\n        ctx.body = {\n            code: 400,\n            data: {},\n            msg: \"查询参数错误\"\n        }\n    }\n\n    // ctx.body = {\n    //     result: true,\n    //     data: ['hubo', 'xygo', 'xxy', 'pangong']\n    // }\n})\n\nrouter.post('/updateUser', async(ctx, next) => {\n    let { userid, params } = Params.bodyValidate(ctx);\n\n    if (userid) {\n        let data = await userCtrl.updateUser(userid, params);\n        ctx.body = data;\n    } else {\n        ctx.body = {\n            code: 400,\n            data: {},\n            msg: \"更新失败\"\n        }\n    }\n})\n\nrouter.get('/getAllUser', async(ctx, next) => {\n    let { limit, skip } = Params.queryValidate(ctx);\n    limit = parseInt(limit);\n    skip = parseInt(skip);\n\n    if (_.isInteger(limit) && _.isInteger(skip) && limit > 0) {\n        let data = await userCtrl.getAllUser(limit, skip);\n        ctx.body = data;\n    } else {\n        ctx.body = {\n            code: 400,\n            data: {},\n            msg: \"查询参数错误\"\n        }\n    }\n})\n\nrouter.post('/updateUserAuth', async(ctx, next) => {\n    let { userid, params } = Params.bodyValidate(ctx);\n\n    if (userid) {\n        let data = await userCtrl.updateUserAuth(userid, params);\n        ctx.body = data;\n    } else {\n        ctx.body = {\n            code: 400,\n            data: {},\n            msg: \"更新失败\"\n        }\n    }\n})\n\nexport default router;\n\n\n// WEBPACK FOOTER //\n// ./server/router/v1/user.js","import _ from 'lodash'\nimport Model from '../models'\nimport Entity from '../service/entity'\nimport axios from 'axios';\nimport jwt from \"jsonwebtoken\";\nimport adminType from \"../conf/adminType\";\nexport default class UserControl {\n    constructor() {}\n\n    /**\n     * 获得用户\n     */\n    async getUser(userid) {\n        let res = null;\n        let doc = await Entity.findById(Model.user, userid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n        // 解析数据\n        if (doc) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 获得多用户\n     * ids: array\n     */\n    async getUsers(ids) {\n        let res = null;\n        let doc = await Entity.findByMulId(Model.user, ids).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n        // 解析数据\n        if (doc) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 登录\n     */\n    async login(code, appid, secret) {\n        let res = null;\n\n        let requstValue = await axios.get('https://api.weixin.qq.com/sns/oauth2/access_token', {\n            params: {\n                appid,\n                secret,\n                code,\n                grant_type: 'authorization_code'\n            }\n        })\n        let userInfoData = null,\n            userInfo = null;\n        if (requstValue.data.access_token) {\n            userInfoData = await axios.get('https://api.weixin.qq.com/sns/userinfo', {\n                params: {\n                    access_token: requstValue.data.access_token,\n                    openid: requstValue.data.openid\n                }\n            });\n            userInfo = _.assign({}, userInfoData.data);\n            userInfo.username = userInfo.openid;\n            userInfo.weixin = userInfoData.data\n            let getUserData = await Entity.find(Model.user, { username: userInfo.username }).catch((err) => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: err\n                }\n            })\n\n            if (getUserData.length && getUserData[0]._id) {\n                userInfo.update_time = Date.now();\n                userInfo.login_time = Date.now();\n                let updateUserData = await Entity.update(Model.user, userInfo).catch((err) => {\n                    res = {\n                        code: 500,\n                        data: null,\n                        msg: err\n                    }\n                })\n                let getUserInfo = await Entity.findById(Model.user, getUserData[0]._id).catch((err) => {\n                    res = {\n                        code: 500,\n                        data: null,\n                        msg: err\n                    }\n                })\n                userInfo = getUserInfo\n                userInfo._doc.userId = getUserInfo._id\n\n            } else {\n                if (userInfo.openid == adminType.superAdmin.openid) {\n                    userInfo.authority = adminType.superAdmin.code;\n                }\n                userInfo.reg_time = Date.now();\n                let createUserData = await Entity.create(Model.user, userInfo).catch((err) => {\n                    res = {\n                        code: 500,\n                        data: null,\n                        msg: err\n                    }\n                })\n                userInfo = createUserData\n                userInfo._doc.userId = createUserData._id\n            }\n            let jwtData = {\n                username: userInfo.username\n            };\n            let token = jwt.sign({\n                // exp: Math.floor(Date.now() / 1000) + (5*60*60),\n                data: jwtData\n            }, 'hefan', { expiresIn: '720h' }); //, {expiresIn: '5h'}\n\n            userInfo.token = token;\n\n\n        }\n        return userInfo\n\n    }\n\n    /**\n     * 修改个人资料\n     * */\n    async updateUser(userid, params) {\n        let res = null,\n            doc = null,\n            updateData = _.pick(params, ['nickname', 'headimgurl']);\n\n        if (userid) {\n            doc = await Entity.update(Model.user, userid, updateData).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'update error'\n                }\n            })\n\n            res = res || {\n                code: 200,\n                data: doc,\n                msg: '更新成功'\n            }\n        }\n\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n /**\n     * 分页获取全部用户\n     * */\n    async getAllUser(limit, skip) {\n        let res = null;\n        let doc = await Entity.fetchPage(Model.user, skip, limit, 'update_time', {}).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n        let count = await Entity.count(Model.user).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        })\n\n        let data = {\n            tableList:doc,\n            count\n        }\n        // 解析数据\n        if (doc && count) {\n            res = {\n                code: 200,\n                data: data,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 修改权限\n     * */\n    async updateUserAuth(userid, params) {\n        let res = null,\n            doc = null,\n            updateData = _.pick(params, ['authority']);\n\n        if (userid) {\n            doc = await Entity.update(Model.user, userid, updateData).catch(e => {\n                res = {\n                    code: 500,\n                    data: null,\n                    msg: 'update error'\n                }\n            })\n\n            res = res || {\n                    code: 200,\n                    data: doc,\n                    msg: '更新成功'\n                }\n        }\n\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n}\n\nexport const userCtrl = new UserControl()\n\n\n// WEBPACK FOOTER //\n// ./server/controls/user.js","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 41\n// module chunks = 0","export default {\n    superAdmin: {\n        code: 2, //超级管理员\n        openid: 'o8H21wl6iG6huPmK56i2_k_v0GnI'\n    },\n    admins: {\n        code: 1, //管理员\n        openidList: ['o8H21wsnq_Qfyb2nCBy4_CvGelYE']\n    }\n\n};\n\n\n// WEBPACK FOOTER //\n// ./server/conf/adminType.js","export const WX_INFO = (process.env.NODE_ENV === 'production') ? {\n    appid: 'wx6598c9857934da6f', //待定\n    secret: '7a6efb06382a9b7bbed17902b09b7f6a' //待定\n} : (process.env.NODE_ENV === 'testing') ? {\n    appid: 'wxddc0ea24b6040522', //待定\n    secret: '57f7b753de0ffba0977b4c12831161d8' //待定\n} : {\n    appid: 'wxf57d0ac7f1af8364',\n    secret: 'b8516d216e62f724a68b7ed5e068b0de'\n};\n\n\n// WEBPACK FOOTER //\n// ./server/conf/index.js","import Router from  \"koa-router\"\nimport Params from '../../utils/params'\nimport {commentCtrl} from '../../controls/comment'\nimport {booksCtrl} from '../../controls/books'\nconst router = new Router()\n\n/**\n * 得到评论\n */\nrouter.get('/comments', async (ctx, next) => {\n    let {id} = Params.queryValidate(ctx)\n    let data = await commentCtrl.comments(id)\n    ctx.body = data\n})\n\n/**\n * 添加评论\n */\nrouter.post('/addComment', async (ctx, next) =>{\n    let params = Params.bodyValidate(ctx);\n    let userInfo = ctx.session.userInfo;\n    let data = await commentCtrl.addComment(params,userInfo)\n\n   ctx.body = data\n})\n\n/**\n * 回复评论\n */\nrouter.post('/replayComment', async (ctx, next) =>{\n    let params = Params.bodyValidate(ctx)\n    let userInfo = ctx.session.userInfo;\n    let data = await commentCtrl.replayComment(params,userInfo)\n    ctx.body = data\n})\n\n\n\nexport default router;\n\n\n// WEBPACK FOOTER //\n// ./server/router/v1/comment.js","import _ from 'lodash'\nimport { ulid } from 'ulid'\nimport Model from '../models'\nimport Params from '../utils/params'\nimport Entity from '../service/entity'\n\n\nexport default class CommentControl {\n\n    /**\n    * 查询评论\n    * */\n    async comments(commentid){\n\n        let res = null;\n        let doc = await Entity.findById(Model.comment,commentid ).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'query error'\n            }\n        });\n\n        // 解析数据\n        if (!res) {\n            res = {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        }\n\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n    /**\n     * 添加评论\n     */\n    async addComment(params,userInfo){\n        let doc,res;\n        let {content,bookid,commentid} = params\n\n        let time =Date.now().toString()\n        let commentData = {\n            userid: userInfo.userId,\n            headimgurl: userInfo.headimgurl,\n            nickname: userInfo.nickname,\n            content: content,\n            create_time: time,\n            key: time\n        }\n\n        if(commentid){\n            //添加评论\n            await Entity.updateBase(Model.comment,{\"_id\":commentid},{'$push':{'comments':commentData}}).catch(e => {\n                res = { code: 500, data: null, msg: 'update comment error' }\n            })\n\n            //更新book的update_time\n            await Entity.update(Model.books,bookid,{'update_time': Date.now()}).catch(e => {\n                res = { code: 500, data: null, msg: 'book update_time fail' }\n            })\n\n        }else{\n            //评论文档\n            let newDoc = {\n                update_time: time,\n                comments: [\n                    commentData\n                ]\n            }\n            //创建新的评论\n            doc = await Entity.create(Model.comment, newDoc).catch(e => {\n                res = {code: 500, data: null, msg: 'create comment error'}\n            })\n\n            commentid = doc._id;\n\n            //更新book的评论id update_time\n            await Entity.update(Model.books,bookid,{'commentid': commentid, 'update_time': Date.now() }).catch(e => {\n                res = {code: 500, data: null, msg: 'book comment update error'}\n            })\n        }\n\n        res = res || {\n                code: 200,\n                data: {\n                    commentid,\n                    key : commentData.key\n                },\n                msg: ''\n        }\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n\n    }\n\n    /**\n     * 修改评论\n     */\n    async replayComment(params,userInfo) {\n        let doc,res,comments;\n        let {key,commentid,content,touser} = params;\n\n        let time =Date.now().toString()\n        let commentData = {\n            userid: userInfo.userId,\n            headimgurl: userInfo.headimgurl,\n            nickname: userInfo.nickname,\n            content: content,\n            create_time: time,\n            key: time\n        }\n        if(touser){\n            commentData.touser = touser\n        }\n\n        let commentDoc = await Entity.findById(Model.comment, commentid).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'comment query error'\n            }\n        })\n\n        comments = commentDoc.comments\n        comments&&comments.map((obj,index)=>{\n            if(obj.key == key){\n                if(obj.childcomments){\n                    obj.childcomments.push(commentData)\n                }else{\n                    obj.childcomments = [commentData]\n                }\n            }\n        })\n\n        doc = Entity.update(Model.comment,commentid,{'comments':comments}).catch(e => {\n            res = {\n                code: 500,\n                data: null,\n                msg: 'update replay comment error'\n            }\n        })\n        res = res || {\n                code: 200,\n                data: doc,\n                msg: ''\n            }\n        //返回数据\n        return new Promise((resolve) => {\n            resolve(res)\n        })\n    }\n\n}\n\nexport const commentCtrl = new CommentControl()\n\n\n// WEBPACK FOOTER //\n// ./server/controls/comment.js","module.exports = require(\"ulid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ulid\"\n// module id = 46\n// module chunks = 0","module.exports = require(\"zlib\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"zlib\"\n// module id = 47\n// module chunks = 0","var webpack = require('webpack')\nvar webConf = require('./constant/web')\n\nmodule.exports = {\n    debug: true,\n    /*\n     ** Headers of the page\n     */\n    head: {\n        title: 'starter',\n        meta: [\n            {charset: 'utf-8'},\n            {hid: 'description', name: 'description', content: 'h5 freshbook'}\n        ],\n        link: [\n            { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\n        ]\n    },\n    /*\n     ** Global CSS\n     */\n    css: [\n        { src: 'quill/dist/quill.bubble.css', lang: 'css' }, //\n        { src: 'quill/dist/quill.snow.css', lang: 'css' }, //\n        { src: 'quill/dist/quill.core.css', lang: 'css' }, //\n        { src: '~assets/css/debug.scss', lang: 'scss' }, // 指定 scss 而非 sass\n        { src: '~/assets/css/main.scss', lang: 'scss' } // 指定 scss 而非 sass\n    ],\n    /**\n     * 环境变量\n     */\n    env: {\n        baseUrl: process.env.BASE_URL || `http://${webConf.nuxt.host}:${webConf.nuxt.port}`\n    },\n    router: {\n        middleware: ['visits', 'user-agent', 'check-login']\n    },\n    /*\n     ** Add axios globally\n     */\n    build: {\n        vendor: ['axios', 'qs'],\n        plugins: [\n            new webpack.DefinePlugin({\n                'process.VERSION': require('./package.json').version,\n                __DEV: true\n            })\n        ],\n        /*\n         ** Run ESLINT on save\n         */\n        extend(config, ctx) {\n            if (ctx.isClient) {\n                // config.module.rules.push({\n                //   enforce: 'pre',\n                //   test: /\\.(js|vue)$/,\n                //   loader: 'eslint-loader',\n                //   exclude: /(node_modules)/\n                // })\n                config.module.rules.push({ test: /iview.src.*?js$/, loader: 'babel-loader' })\n                config.watch = true\n            }\n        }\n    },\n    plugins: [{ src: '~plugins/iview', ssr: true }, { src: '~plugins/filters' , ssr: false}, { src: '~plugins/mavon-eidor', ssr: false },\n        { src: '~plugins/infinite-scroll', ssr: false }, { src: '~plugins/vue-html5-editor', ssr: false }\n    ],\n    loading: '~/components/common/Loading.vue',\n    watchers: {\n        webpack: {\n            aggregateTimeout: 300,\n            ignored: /node_modules/,\n            poll: 1000\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./nuxt.config.js","module.exports = require(\"webpack\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webpack\"\n// module id = 49\n// module chunks = 0","module.exports = {\"name\":\"hefan-freshbook\",\"version\":\"1.0.0\",\"description\":\"freshbook project\",\"author\":\"李春伟 <lichunwei@hefantv.com>\",\"private\":true,\"scripts\":{\"server\":\"backpack start\",\"nuxtBuild\":\"nuxt build\",\"dev\":\"backpack dev\",\"build\":\"backpack build\",\"pro\":\"backpack pro\",\"precommit\":\"npm run lint\",\"lint\":\"eslint --ext .js,.vue --ignore-path .gitignore .\"},\"config\":{\"nuxt\":{\"host\":\"127.0.0.1\",\"port\":\"9018\"}},\"dependencies\":{\"axios\":\"^0.16.2\",\"babel-preset-es2015\":\"^6.24.1\",\"babel-preset-stage-0\":\"^6.24.1\",\"boom\":\"^7.1.1\",\"brace-expansion\":\"^1.1.8\",\"cross-env\":\"^5.0.1\",\"debug\":\"^3.1.0\",\"hefantv-backpack\":\"^0.1.6\",\"inflight\":\"^1.0.6\",\"ioredis\":\"^3.2.2\",\"iview\":\"^2.7.3\",\"jsonwebtoken\":\"^8.1.0\",\"koa\":\"^2.4.1\",\"koa-bodyparser\":\"^4.2.0\",\"koa-compress\":\"^2.0.0\",\"koa-cors\":\"^0.0.16\",\"koa-router\":\"^7.3.0\",\"koa-session2\":\"^2.2.5\",\"lodash\":\"^4.17.4\",\"mavon-editor\":\"^2.4.7\",\"moment\":\"^2.18.1\",\"mongoose\":\"^4.11.3\",\"node-sass\":\"^4.7.2\",\"nuxt\":\"^1.0.0-rc11\",\"opn\":\"^4.0.2\",\"qa\":\"^0.0.1\",\"sass-loader\":\"^6.0.6\",\"source-map-support\":\"^0.4.15\",\"ulid\":\"^2.2.3\",\"vue-infinite-scroll\":\"^2.0.2\",\"vue-markdown\":\"^2.2.4\",\"vue-quill-editor\":\"^3.0.4\",\"wrappy\":\"^1.0.2\",\"ws\":\"^2.2.3\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 50\n// module chunks = 0"],"sourceRoot":""}